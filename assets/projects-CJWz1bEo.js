import{q as m}from"./index-uh8BREWn.js";class d{static parseYAML(r){const a=r.split(`
`),t={};for(const o of a){const s=o.trim();if(!s||s.startsWith("#"))continue;const e=s.indexOf(":");if(e===-1)continue;const n=s.substring(0,e).trim();let c=s.substring(e+1).trim(),i;c.startsWith("[")&&c.endsWith("]")?i=c.slice(1,-1).split(",").map(g=>g.trim().replace(/^["']|["']$/g,"")):c==="true"||c==="false"?i=c==="true":!isNaN(Number(c))&&c!==""?i=Number(c):i=c.replace(/^["']|["']$/g,""),t[n]=i}return t}static parseMarkdownWithFrontmatter(r){const a=/^---\s*\n([\s\S]*?)\n---\s*\n([\s\S]*)$/,t=r.match(a);if(!t)throw new Error("No frontmatter found in markdown file");const[,o,s]=t,e=this.parseYAML(o),n=["id","title","subtitle","description","category"];for(const c of n)if(!e[c])throw new Error(`Missing required frontmatter field: ${c}`);return e.tags=e.tags||[],e.image=e.image||"",e.featured=e.featured||!1,e.liveUrl=e.liveUrl||"",e.sourceUrl=e.sourceUrl||"",e.liveUrlLabel=e.liveUrlLabel||"Live Demo",e.sourceUrlLabel=e.sourceUrlLabel||"Source Code",e.completedAt=e.completedAt||"",e.duration=e.duration||"",{frontmatter:e,content:s}}}class u{static cache=new Map;static projectsCache=null;static getBasePath(){return window.location.hostname==="mrleemurray.github.io"?"/site":""}static async loadProjectContent(r){const t=`${this.getBasePath()}/projects/${r}.md`;if(this.cache.has(t))return this.cache.get(t);try{const o=await fetch(t);if(!o.ok)throw new Error(`Failed to load markdown: ${o.statusText}`);const s=await o.text(),e=d.parseMarkdownWithFrontmatter(s);return this.cache.set(t,e),e}catch(o){throw console.error("Error loading markdown:",o),new Error(`Failed to load project: ${r}`)}}static async loadProjectsData(){if(this.projectsCache)return this.projectsCache;try{const{PROJECT_REGISTRY:r}=await m(async()=>{const{PROJECT_REGISTRY:e}=await import("./project-registry-LXY8WSjq.js");return{PROJECT_REGISTRY:e}},[]),a=[],t=new Map;for(const e of r)try{const n=await this.loadProjectContent(e);a.push(n.frontmatter);const c=n.frontmatter.category;t.set(c,(t.get(c)||0)+1)}catch(n){console.warn(`Failed to load project ${e}:`,n)}const o=[{id:"web",name:"Web Development",count:t.get("web")||0},{id:"mobile",name:"Mobile",count:t.get("mobile")||0},{id:"api",name:"APIs",count:t.get("api")||0},{id:"tools",name:"Tools",count:t.get("tools")||0}],s={projects:a,categories:o};return this.projectsCache=s,s}catch(r){return console.error("Error loading projects data:",r),{projects:[],categories:[]}}}static parseMarkdownToHTML(r){const a=s=>s.toLowerCase().replace(/[^\w\s-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-").trim(),t=this.getBasePath();return r.replace(/^### (.*$)/gim,(s,e)=>`<h3 id="${a(e)}">${e}</h3>`).replace(/^## (.*$)/gim,(s,e)=>`<h2 id="${a(e)}">${e}</h2>`).replace(/^# (.*$)/gim,(s,e)=>`<h1 id="${a(e)}">${e}</h1>`).replace(/\*\*\*(.*)\*\*\*/gim,"<strong><em>$1</em></strong>").replace(/\*\*(.*)\*\*/gim,"<strong>$1</strong>").replace(/\*(.*)\*/gim,"<em>$1</em>").replace(/!\[([^\]]*)\]\(([^)]+)\)/gim,(s,e,n)=>{const c=n.startsWith("/")?`${t}${n}`:n.startsWith("http")?n:`${t}/${n}`;return`<img alt="${e}" src="${c}" />`}).replace(/\[([^\]]+)\]\(([^)]+)\)/gim,'<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>').replace(/```(\w+)?\n([\s\S]*?)```/gim,'<pre><code class="language-$1">$2</code></pre>').replace(/`([^`]+)`/gim,"<code>$1</code>").replace(/^\- (.*$)/gim,"<li>$1</li>").replace(/(<li>.*<\/li>)/gis,"<ul>$1</ul>").replace(/\n\n/gim,"</p><p>").replace(/^(.*)$/gim,"<p>$1</p>").replace(/<p><\/p>/gim,"").replace(/<p>(<h[1-6]>.*<\/h[1-6]>)<\/p>/gim,"$1").replace(/<p>(<pre>.*<\/pre>)<\/p>/gims,"$1").replace(/<p>(<ul>.*<\/ul>)<\/p>/gims,"$1")}static extractTableOfContents(r){const a=[],t=/^(#{1,6})\s+(.*)$/gm;let o;for(;(o=t.exec(r))!==null;){const s=o[1].length,e=o[2].trim(),n=e.toLowerCase().replace(/[^\w\s-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-").trim();a.push({id:n,text:e,level:s})}return a}static clearCache(){this.cache.clear()}}class h{static getProjectById(r,a){return r.find(t=>t.id===a)}static getProjectsByCategory(r,a){return a?r.filter(t=>t.category===a):r}static getFeaturedProjects(r){return r.filter(a=>a.featured)}static searchProjects(r,a){if(!a)return r;const t=a.toLowerCase();return r.filter(o=>o.title.toLowerCase().includes(t)||o.description.toLowerCase().includes(t)||o.tags.some(s=>s.toLowerCase().includes(t)))}static sortProjects(r,a="date"){return[...r].sort((t,o)=>{switch(a){case"title":return t.title.localeCompare(o.title);case"category":return t.category.localeCompare(o.category);case"date":default:return new Date(o.completedAt).getTime()-new Date(t.completedAt).getTime()}})}static getProjectStats(r){const a=r.length,t=r.filter(e=>e.featured).length,o=[...new Set(r.map(e=>e.category))].length,s=[...new Set(r.flatMap(e=>e.tags))].length;return{totalProjects:a,featuredProjects:t,categories:o,technologies:s}}}export{u as M,h as P};
